// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ó–ê–ú–ï–ù–ò–¢–ï –∑–Ω–∞—á–µ–Ω–∏—è!)
const BOT_TOKEN = '7763273598:AAFpDkG7beD4ow6nPD6o6-VLncJfbaV0wF0';
const CHAT_ID = '660109551'; // –ü–æ–ª—É—á–∏—Ç–µ —á–µ—Ä–µ–∑ @userinfobot

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
async function sendToTelegram(formData) {
  let message = `üìå –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\n–¢–∏–ø: ${formData.form_type || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n–ò–º—è: ${formData.name}`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å –≤ —Ñ–æ—Ä–º–µ
  if (formData.phone) message += `\n–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}`;
  if (formData.email) message += `\nEmail: ${formData.email}`;
  if (formData.message) message += `\n–°–æ–æ–±—â–µ–Ω–∏–µ: ${formData.message}`;
  
  const url = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;
  const body = new URLSearchParams();
  body.append('chat_id', CHAT_ID);
  body.append('text', message);
  
  try {
    const img = new Image();
    img.src = `${url}?${body.toString()}`;
    return true;
  } catch (error) {
    console.error('Telegram Error:', error);
    return false;
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ñ–æ—Ä–º
function setupForm(formId, modalId = null) {
  const form = document.getElementById(formId);
  if (!form) return;

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const button = form.querySelector('button[type="submit"]');
    button.disabled = true;
    const originalText = button.textContent;
    button.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';

    // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
    const formData = {
      form_type: form.querySelector('[name="form_type"]')?.value || formId,
      name: form.querySelector('[name="name"]')?.value,
      phone: form.querySelector('[name="phone"]')?.value,
      email: form.querySelector('[name="email"]')?.value,
      message: form.querySelector('[name="message"]')?.value
    };

    try {
      const success = await sendToTelegram(formData);
      if (success) {
        alert('‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.');
        form.reset();
        if (modalId) {
          document.getElementById(modalId)?.classList.remove('active');
        }
      } else {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É');
      }
    } catch (error) {
      console.error('Form Error:', error);
      alert('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏. –ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –Ω–∞–ø—Ä—è–º—É—é!');
    } finally {
      button.disabled = false;
      button.textContent = originalText;
    }
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ñ–æ—Ä–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
  setupForm('consultation-form', 'consultation-modal');
  setupForm('callback-form', 'callback-modal');
  setupForm('contact-form'); // –î–ª—è —Ñ–æ—Ä–º—ã –±–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
});